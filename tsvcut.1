.TH tsvcut n "August 2017" "" ""
.SH NAME
tsvcut \- cut fields from tab-separated key-value stream
.SH SYNOPSIS
.nf

tsvcut [\-t|\-h] [\-n NULL] [--] column column...
.fi
.SH DESCRIPTION
This is a simple command-line program to cut out specific fields from
a TSV (tab separated values) file and return just those values.  Its
behavior is inspired by the UNIX cut(1) command, but is specifically
tailored for the TSV file format.
.PP
All TSV input files are expected to be lines of alternating
key-value pairs that are separated by tab characters.  The ordering of
fields can be vary between lines, as long as consistent field names
are used.  Some lines may include fields that are not present on other
lines.  For example:

.nf
\*(T<
color	blue	fruit	blueberry	price	1.99
color	red	fruit	strawberry	price	3.99	sale	2.99
color	yellow	price	2.49	fruit	banana
\*(T>
.fi
.SH ARGUMENTS
.TP
column
The name of a column to extract from the file
.TP
-t
Include the column names inline (maintain the key-value format).
.TP
-h
Include the column names as a separate tab-separated header line.
.TP
-n NULL
Use the provided string as the null value indicator (default empty string).


.SH EXAMPLES
The tsvcut command should be run with the list of desired fields on
its command-line, and the TSV file supplied as stdin (using
redirection or pipes):

.nf
\*(T<
    tsvcut color price < fruits.tsv

    blue	1.99
    red	3.99
    yellow	2.49
\*(T>
.fi

If you specify the -t option, then you will receive the field names too:

.nf
\*(T<
    tsvcut -t color price < fruits.tsv

    color	blue	price	1.99
    color	red	price	3.99
    color	yellow	price	2.49
\*(T>
.fi
